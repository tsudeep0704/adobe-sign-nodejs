# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

functions:
  example:
    handler: handler.hello
    events:
      - http: true
        x-azure-settings:
            name: req #<string>, default - "req", specifies which name it's available on `context.bindings`
            methods: #<array> [GET, POST, PUT, DELETE], default - all
                - GET
            route: example/hello #<string>, default - <function name>
            authLevel: anonymous #<enum - anonymous|function (default)|admin>



#service: adobe-esign-adapter # NOTE: update this with your service name
#-------service: accela-esign-adapter

#-------provider:
#-------  name: aws
#-------  runtime: nodejs4.3

# you can overwrite defaults here
#-------  stage: prod
#-------  region: us-west-2
#-------  memorySize: 1024

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#-------  iamRoleStatements:
#-------    - Effect: "Allow"
#-------      Action:
#-------        - "dynamodb:*"
#-------      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/*"

# you can add packaging information here
#package:
#  exclude:
#    - exclude-me.js
#  artifact: my-service-code.zip

#-------functions:
#-------  adobeEsignCallback:
#-------    handler: handler.esignCallback
#-------    timeout: 300
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#-------    events:
#-------      - http:
#-------          path: esign/callback
#-------          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#  esignCallback2:
#    handler: handler.esignCallback2
#
##    The following are a few example events you can configure
##    NOTE: Please make sure to change your handler code to work with those events
##    Check the event documentation for details
#    events:
#      - http:
#          path: esign/callback2
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
